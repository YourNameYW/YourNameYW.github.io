<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>组件评论功能的实现</title>
      <link href="/2019/11/18/vue/vue-CommentsList/"/>
      <url>/2019/11/18/vue/vue-CommentsList/</url>
      
        <content type="html"><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/comments.gif" alt="效果图"></p><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><h3 id="涉及知识："><a href="#涉及知识：" class="headerlink" title="涉及知识："></a>涉及知识：</h3><ul><li><code>vue父子组件</code>定义以及传值</li><li><code>H5 localStorage</code></li><li><code>JSON.stringify()</code>和<code>JSON.parse()</code></li></ul><h3 id="效果分析"><a href="#效果分析" class="headerlink" title="效果分析"></a>效果分析</h3><h4 id="页面构成"><a href="#页面构成" class="headerlink" title="页面构成"></a>页面构成</h4><ul><li>父组件包含评论列表</li><li>子组件包含评论人、评论内容以及评论时间<br><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/12.jpg" alt="效果图"></li></ul><h4 id="发表评论功能-子组件"><a href="#发表评论功能-子组件" class="headerlink" title="发表评论功能[子组件]"></a>发表评论功能[子组件]</h4><ol><li>先组织出一个最新的评论数据 如：<code>{user:'张三',content:'今天天气不错~'}</code></li><li>定义变量<code>var list</code>。先从localStorage获取到之前评论数据(string)，转换为一个数组对象，<code>JSON.parse()</code>【从一个字符串中解析出json对象，再<code>localStorage.getItem('cmts')||'[]'</code></li><li>把组织出的最新的评论数据push至list数组 如：<code>list.unshift(最新的评论数据)</code><br><strong>注：unshift()—–向数组的开头添加一个或多个元素，并且返回新的长度</strong></li><li>把第一步得到的评论数据，保存到localStorage中<br> <code>注：</code><br> 4.1 localStorage只支持存放字符串数据，要先JSON.stringify。JSON.stringify()【从一个对象中解析出字符串】<br> 4.2 把最新的评论列表数组，存入本地存储localStorage中，首先调用JSON.stringify转为数据字符串【localStorage只支持存放字符串数据】，然后调用localStorage.setItem(‘’,’’)</li><li>父组件把加载评论功能传递给子组件（子组件可以调用父组件函数），点击发表评论，从本地的localStoage中，加载评论列表 <code>$emit()</code></li></ol><h4 id="加载评论列表-父组件"><a href="#加载评论列表-父组件" class="headerlink" title="加载评论列表[父组件]"></a>加载评论列表[父组件]</h4><ol><li>定义变量<code>var list</code>。先从localStorage获取到之前评论数据(string)，转换为一个数组对象，<code>JSON.parse()</code>【从一个字符串中解析出json对象，再<code>localStorage.getItem('cmts')||'[]'</code></li><li>created()钩子函数开始执行时，从本地的localStoage中取出数据，加载评论列表</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="页面构成-1"><a href="#页面构成-1" class="headerlink" title="页面构成"></a>页面构成</h3><p>注：这里的样式均引用<code>bootstrap</code></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--调用定义子组件 &amp;&amp; 定义父组件函数--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cmt-box</span> <span class="token attr-name">@func</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadComments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cmt-box</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--评论列表--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list-group-item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in list<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>评论人：{{item.user}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            {{item.content}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--子组件：评论人、评论内容以及评论时间--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tmp1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>评论人：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>评论内容：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>发表评论<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>postComment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre><p>数据：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">var</span> commentBox<span class="token operator">=</span><span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//定义子组件</span>    template<span class="token punctuation">:</span><span class="token string">'#tmp1'</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//定义子组件模板对象</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            user<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//评论人 </span>            content<span class="token punctuation">:</span><span class="token string">''</span>    <span class="token comment" spellcheck="true">//评论内容</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">var</span> vm<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//父组件</span>    el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span><span class="token punctuation">{</span>        list<span class="token punctuation">:</span><span class="token punctuation">[</span>            <span class="token comment" spellcheck="true">/*假数据*/</span>            <span class="token punctuation">{</span>id<span class="token punctuation">:</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">:</span><span class="token string">'李白'</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">'天生我材必有用'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>id<span class="token punctuation">:</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">:</span><span class="token string">'江小白'</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">'劝君更尽一杯酒'</span><span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/*注册子组件*/</span>    components<span class="token punctuation">:</span><span class="token punctuation">{</span>        <span class="token string">'cmt-box'</span><span class="token punctuation">:</span>commentBox    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="发表评论功能-子组件-1"><a href="#发表评论功能-子组件-1" class="headerlink" title="发表评论功能[子组件]"></a>发表评论功能[子组件]</h3><pre class=" language-js"><code class="language-js">methods<span class="token punctuation">:</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*点击发表评论按钮触发函数*/</span>    <span class="token function">postComment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*组织出一个最新的评论数据*/</span>        <span class="token keyword">var</span> comment<span class="token operator">=</span><span class="token punctuation">{</span>id<span class="token punctuation">:</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/*localStorage获取到之前评论数据(string)，转换为一个数组对象*/</span>        <span class="token keyword">var</span> list<span class="token operator">=</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'cmts'</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token string">'[]'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">/*把组织出的最新的评论数据push至list数组*/</span>        list<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">/*重新保存最新的评论*/</span>        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'cmts'</span><span class="token punctuation">,</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">/*清空输入框*/</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token operator">=</span><span class="token string">''</span>        <span class="token comment" spellcheck="true">/*子组件调用父组件加载评论列表功能函数*/</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'func'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>localStorage存入效果：[点击f12查看]</p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/13.jpg" alt="localStorage"></p><h3 id="加载评论列表-父组件-1"><a href="#加载评论列表-父组件-1" class="headerlink" title="加载评论列表[父组件]"></a>加载评论列表[父组件]</h3><pre class=" language-js"><code class="language-js">methods<span class="token punctuation">:</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*加载评论列表*/</span>    <span class="token function">loadComments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">/*从本地的localStoage中，加载评论列表*/</span>        <span class="token keyword">var</span> list<span class="token operator">=</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'cmts'</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token string">'[]'</span><span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token operator">=</span>list    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">/*页面刚加载执行函数*/</span><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadComments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>评论功能<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bootstrap/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cmt-box</span> <span class="token attr-name">@func</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadComments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cmt-box</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list-group-item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in list<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>评论人：{{item.user}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                {{item.content}}            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tmp1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>评论人：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>评论内容：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>发表评论<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>postComment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> commentBox<span class="token operator">=</span><span class="token punctuation">{</span>            template<span class="token punctuation">:</span><span class="token string">'#tmp1'</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>                    user<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>                    content<span class="token punctuation">:</span><span class="token string">''</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span><span class="token punctuation">{</span>                <span class="token function">postComment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">var</span> comment<span class="token operator">=</span><span class="token punctuation">{</span>id<span class="token punctuation">:</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">}</span>                    <span class="token keyword">var</span> list<span class="token operator">=</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'cmts'</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token string">'[]'</span><span class="token punctuation">)</span>                    list<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span>                    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'cmts'</span><span class="token punctuation">,</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token operator">=</span><span class="token string">''</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'func'</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> vm<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>           el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           data<span class="token punctuation">:</span><span class="token punctuation">{</span>               list<span class="token punctuation">:</span><span class="token punctuation">[</span>                   <span class="token punctuation">{</span>id<span class="token punctuation">:</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">:</span><span class="token string">'李白'</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">'天生我材必有用'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                   <span class="token punctuation">{</span>id<span class="token punctuation">:</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">:</span><span class="token string">'江小白'</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">'劝君更尽一杯酒'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                   <span class="token punctuation">{</span>id<span class="token punctuation">:</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>user<span class="token punctuation">:</span><span class="token string">'小马'</span><span class="token punctuation">,</span>content<span class="token punctuation">:</span><span class="token string">'我姓马，风吹草低见牛羊'</span><span class="token punctuation">}</span>               <span class="token punctuation">]</span>           <span class="token punctuation">}</span><span class="token punctuation">,</span>           methods<span class="token punctuation">:</span><span class="token punctuation">{</span>               <span class="token function">loadComments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                 <span class="token keyword">var</span> list<span class="token operator">=</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'cmts'</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token string">'[]'</span><span class="token punctuation">)</span>                 <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token operator">=</span>list               <span class="token punctuation">}</span>           <span class="token punctuation">}</span><span class="token punctuation">,</span>           <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadComments</span><span class="token punctuation">(</span><span class="token punctuation">)</span>           <span class="token punctuation">}</span><span class="token punctuation">,</span>           components<span class="token punctuation">:</span><span class="token punctuation">{</span>               <span class="token string">'cmt-box'</span><span class="token punctuation">:</span>commentBox           <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>vue父子组件传函数方法:<ul><li>父组件定义函数—loadComments(){ …… }</li><li>子组件定义父组件函数方法—@func=”loadComments”</li><li>子组件引用父组件函数方法—this.$emit(‘func’)</li></ul></li><li>H5 localStorage:<ul><li>localStorage中一般浏览器支持的是5M大小</li><li>localStorage.setItem(“key”,”value”)：存储名字为key的一个值value，如果key存在，就更新value</li><li>localStorage.getItem(“key”)：获取名称为key的值，如果key不存在则返回null</li><li>localStorage.removeItem(“key”)：删除名称为”key”的信息，这个key所对应的value也会全部被删除</li><li>localStorage.clear()：清空localStorage中所有信息</li></ul></li><li>JSON.stringify()和JSON.parse()<ul><li>JSON.parse(); 将字符串格式转换成JSON对象进行处理</li><li>JSON.stringify(); 将JSON对象转换成字符串格式</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> localStorage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组件传值-父组件向子组件传值和data与props的区别</title>
      <link href="/2019/11/13/vue/vue-data-props/"/>
      <url>/2019/11/13/vue/vue-data-props/</url>
      
        <content type="html"><![CDATA[<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><p><code>注：</code>  <a href="/2019/11/12/vue-component/">点我了解子组件的定义</a></p><h2 id="组件传值"><a href="#组件传值" class="headerlink" title="组件传值"></a>组件传值</h2><p>在父组件中定义：</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> vm<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>           el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           data<span class="token punctuation">:</span><span class="token punctuation">{</span>               msg<span class="token punctuation">:</span><span class="token string">'123,这是父组件中的数据'</span>           <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>在子组件中接收</p><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--父组件向子组件传值--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com1</span> <span class="token attr-name">:parentmsg</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>com1</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        components<span class="token punctuation">:</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//子组件中，默认无法访问到父组件中的数据</span>            com1<span class="token punctuation">:</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//子组件自身私有的</span>                <span class="token comment" spellcheck="true">//可读可写</span>                <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">//注意：组件中的所有props中的数据，都是通过 父组件传递给子组件的</span>                <span class="token comment" spellcheck="true">//props中的数据，都是只读的，无法重新赋值</span>                props<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'parentmsg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//把父组件传递过来的数据接收</span>                template<span class="token punctuation">:</span><span class="token string">'&lt;h1>这是子组件---{{parentmsg}}&lt;/h1>'</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>运行截图：</p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/11.png" alt="运行截图"></p><hr><h2 id="data与props的区别"><a href="#data与props的区别" class="headerlink" title="data与props的区别"></a>data与props的区别</h2><ul><li><code>data</code>用于定义子组件data私有数据，数据可读可写</li><li><code>props</code>用于把父组件传递过来的数据接收，数据都是只读的，无法重新赋值</li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>子组件的定义</title>
      <link href="/2019/11/12/vue/vue-component/"/>
      <url>/2019/11/12/vue/vue-component/</url>
      
        <content type="html"><![CDATA[<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><h3 id="全局组件"><a href="#全局组件" class="headerlink" title="全局组件"></a>全局组件</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><ul><li>方式一：直接定义</li></ul><p>语法格式：<code>Vue.component('组件的名称',{})</code> </p><p>属性：<code>template</code>为：组件模板内容</p><p>比如：定义一个名为login的组件，内容为：我是组件我是组件</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>            template<span class="token punctuation">:</span><span class="token string">'&lt;h3>我是组件我是组件&lt;/h3>'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><ul><li>方式二：在被控制的#app外面，使用template元素，定义组件的HTML模板结构</li></ul><p>比如：定义一个名为login的组件，内容为：我是组件我是组件 </p><pre class=" language-html"><code class="language-html">    <span class="token comment" spellcheck="true">&lt;!--template元素定义在#app外面--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tmp1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>我是组件我是组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>            template<span class="token punctuation">:</span><span class="token string">'#tmp1'</span>      <span class="token comment" spellcheck="true">//template值为外部id名</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>语法格式：直接把组件的名称，以HTML标签的形式，引入到页面中</p><pre class=" language-html"><code class="language-html">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>login</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>login</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="私有组件"><a href="#私有组件" class="headerlink" title="私有组件"></a>私有组件</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>语法格式：通过Vue实例中<code>components</code>属性</p><p>比如：定义一个名为login的组件，内容为：我是组件我是组件 </p><pre class=" language-html"><code class="language-html">    <span class="token comment" spellcheck="true">&lt;!--template元素定义在#app外面--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tmp1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>我是组件我是组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre><pre class=" language-js"><code class="language-js">  <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> vm<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>           el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           data<span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>           methods<span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>           filters<span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//过滤器</span>           directives<span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//指令</span>           components<span class="token punctuation">:</span><span class="token punctuation">{</span>           <span class="token comment" spellcheck="true">//定义私有组件</span>            login<span class="token punctuation">:</span><span class="token punctuation">{</span>                template<span class="token punctuation">:</span><span class="token string">'#tmp1'</span>            <span class="token punctuation">}</span>           <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="引用-1"><a href="#引用-1" class="headerlink" title="引用"></a>引用</h4><p>语法格式：直接把组件的名称，以HTML标签的形式，引入到页面中</p><pre class=" language-html"><code class="language-html">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>login</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>login</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法详解</title>
      <link href="/2019/11/02/markdown/"/>
      <url>/2019/11/02/markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><h3 id="markdown是什么？"><a href="#markdown是什么？" class="headerlink" title="markdown是什么？"></a>markdown是什么？</h3><p><code>Markdown</code>是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是<code>".md"</code>。</p><p>简单来说：<code>Markdown</code><strong>用于纯文本格式编写文档-&gt;HTML页面</strong><br>试想一下？手敲纯文本格式文档就可以展示HTML页面岂不是很爽~</p><h3 id="markdown优点"><a href="#markdown优点" class="headerlink" title="markdown优点"></a>markdown优点</h3><ul><li>语法简单，能快速编写，几分钟就能了解它的全部语法</li><li>能直接阅读，而没有HTML的各种标签的干扰</li></ul><h2 id="语法详解"><a href="#语法详解" class="headerlink" title="语法详解"></a>语法详解</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>使用n个#加一个空格表示n级标题。</p><pre class=" language-md"><code class="language-md"># 标题H1## 标题H2### 标题H3#### 标题H4##### 标题H5</code></pre><p>而在预览时，解释器自动帮我们解释成HTML语法，如下：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题H1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>标题H2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>标题H3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>标题H4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>标题H5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span></code></pre><hr><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>星号或者是一个下划线包起来。</p><h4 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h4><pre class=" language-md"><code class="language-md">**粗体**__粗体__</code></pre><p>效果：<br><strong>粗体</strong><br><strong>粗体</strong></p><h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h4><pre class=" language-md"><code class="language-md">*斜体****粗斜体***</code></pre><p>效果：<br><em>斜体</em><br><strong><em>粗斜体</em></strong></p><hr><h3 id="引用文本"><a href="#引用文本" class="headerlink" title="引用文本"></a>引用文本</h3><p>区块引用使用&gt;表示。</p><pre class=" language-md"><code class="language-md">> 1.引用文本 Blockquotes> 2.引用的行内混合 Blockquotes> 3.这是另一个区块引用>> 这是一个二级嵌套引用>>> 这是一个三级嵌套引用</code></pre><p>效果：</p><blockquote><p>1.引用文本 Blockquotes<br>2.引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href="https://www.baidu.com/" target="_blank" rel="noopener">普通链接</a>。<br>3.  这是另一个区块引用</p><blockquote><p>这是一个二级嵌套引用</p><blockquote><p>这是一个三级嵌套引用</p></blockquote></blockquote></blockquote><hr><h3 id="锚点与链接"><a href="#锚点与链接" class="headerlink" title="锚点与链接"></a>锚点与链接</h3><p>格式是：链接的文字放在[]中，链接地址放在随后的（）中。</p><pre class=" language-md"><code class="language-md">1.[普通链接](https://www.baidu.com/)2.[普通链接带标题](https://www.baidu.com/ "普通链接带标题")3.直接链接：<https://www.baidu.com>4.[mailto:test.test@email.com](mailto:test.test@email.com)</code></pre><p>效果<br>1.<a href="https://www.mdeditor.com/" target="_blank" rel="noopener">普通链接</a><br>2.<a href="https://www.mdeditor.com/" target="_blank" rel="noopener" title="普通链接带标题">普通链接带标题</a><br>3.直接链接：<a href="https://www.mdeditor.com" target="_blank" rel="noopener">https://www.mdeditor.com</a><br>4.<a href="mailto:test.test@email.com" target="_blank" rel="noopener">mailto:test.test@email.com</a></p><hr><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>格式是：链接的文字放在![]中，链接地址放在随后的（）中。<code>!必须</code></p><pre class=" language-md"><code class="language-md">![图片](https://www.mdeditor.com/images/logos/markdown.png)</code></pre><p>效果:<br><img src="https://www.mdeditor.com/images/logos/markdown.png" alt="图片"></p><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表(-/*)"></a>无序列表(-/*)</h4><pre class=" language-md"><code class="language-md">- 列表一- 列表二- 列表三</code></pre><pre class=" language-md"><code class="language-md">* 列表一* 列表二* 列表三</code></pre><p>效果：</p><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表嵌套"><a href="#无序列表嵌套" class="headerlink" title="无序列表嵌套(+/*)"></a>无序列表嵌套(+/*)</h4><pre class=" language-md"><code class="language-md">+ 列表一+ 列表二    + 列表二-1    + 列表二-2    + 列表二-3+ 列表三    * 列表一    * 列表二    * 列表三</code></pre><p>效果：</p><ul><li>列表一</li><li>列表二<ul><li>列表二-1</li><li>列表二-2</li><li>列表二-3</li></ul></li><li>列表三<ul><li>列表一</li><li>列表二</li><li>列表三</li></ul></li></ul><h4 id="有序列表-数字"><a href="#有序列表-数字" class="headerlink" title="有序列表(数字)"></a>有序列表(数字)</h4><pre class=" language-md"><code class="language-md">1. 第一行2. 第二行3. 第三行</code></pre><p>效果：</p><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol><hr><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><pre class=" language-md"><code class="language-md">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><p>对齐方式</p><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><code>-:</code>设置内容和标题栏居右对齐。</li><li><code>:-</code>设置内容和标题栏居右对齐。</li><li><code>:-:</code>设置内容和标题栏居右对齐。</li></ul><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><hr><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><h4 id="单行代码"><a href="#单行代码" class="headerlink" title="单行代码"></a>单行代码</h4><p>如果代码量比较少，只有单行的话，可以用单反引号包起来。反引号是键盘esc键下方的那个按键。</p><pre class=" language-md"><code class="language-md">`<p>这是一个代码块</p>`</code></pre><p>效果：<br><code>&lt;p&gt;这是一个代码块&lt;/p&gt;</code></p><h4 id="多行代码"><a href="#多行代码" class="headerlink" title="多行代码"></a>多行代码</h4><p>可以使用三个反引号来引用代码块。也可以使用一个tab或者是四个空格来表示 。在上方的```后可以添加代码语言，可以对关键字进行不同颜色的显示。</p><pre class=" language-md"><code class="language-md">```代码语言<p>内容</p>```</code></pre><h5 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h5><pre class=" language-javascript"><code class="language-javascript">  <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre><h5 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h5><pre class=" language-html"><code class="language-html">  <span class="token doctype">&lt;!DOCTYPE html></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mate</span> <span class="token attr-name">charest</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">              <span class="token selector"><span class="token class">.hello</span></span><span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff0000</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><hr><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>转义就是将一些特殊字符转换成正常显示的样子，和大多数编程语言相同使用反斜杠()表示。下面简单列举几个。</p><pre class=" language-md"><code class="language-md">* \\* \`* \** \!</code></pre><p>效果：</p><ul><li>\</li><li>`</li><li>*</li><li>!</li></ul><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>分割线可以由* - _（星号，减号，底线）这3个符号的至少3个符号表示，注意至少要3个，且不需要连续，有空格也可以,但是两个符号之间最多只能有一个空格。建议使用减号-表示</p><pre class=" language-md"><code class="language-md">---_ _ _* **</code></pre><p>效果：</p><hr><hr><p>到此为止，就学会了基本的<code>markdown</code>语法。</p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery样式的使用</title>
      <link href="/2019/10/31/hexo-theme-matery/"/>
      <url>/2019/10/31/hexo-theme-matery/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> hexo-theme-matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/31/hello-world/"/>
      <url>/2019/10/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github搭建个人博客</title>
      <link href="/2019/10/30/hexo-github/"/>
      <url>/2019/10/30/hexo-github/</url>
      
        <content type="html"><![CDATA[<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><p><code>注：</code> 在搭建个人博客前首先要了解以下内容：</p><ul><li><p>node.js</p></li><li><p><a href="/2019/11/02/markdown/">Markdown</a></p></li></ul><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>有一个github账号<br> <code>注：</code><a href="https://github.com/join/" target="_blank" rel="noopener">点我开始注册</a></p></li><li><p>安装了node.js、npm</p><ul><li><p>检查是否安装node，在<code>cmd</code>中输入：（安装成功会显示版本号）</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> node -v <span class="token comment" spellcheck="true">#检查是否安装node</span></code></pre><p>如果没有安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">点我开始安装</a></p></li><li><p>检查是否安装npm，在<code>cmd</code>中输入：（安装成功会显示版本号）</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> <span class="token function">npm</span> -v <span class="token comment" spellcheck="true">#检查是否安装npm</span></code></pre><blockquote><p><code>注：</code>如果是最新版的node.js安装后就不需要再安装npm的。由于新版的node.js已经集成了npm，所以之前npm也一并安装好了。</p></blockquote></li></ul></li><li><p>安装了git for windows（或者其它git客户端）</p><ul><li>检查是否安装git，在<code>cmd</code>中输入：（安装成功会显示版本号）<pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> <span class="token function">git</span> --version <span class="token comment" spellcheck="true">#检查是否安装git</span></code></pre>如果没有安装<a href="https://git-scm.com/" target="_blank" rel="noopener">点我开始安装</a></li></ul></li></ul><hr><h2 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（<strong>必须是你的用户名，其它名称无效</strong>），将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io</a></p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/0.jpg" alt="创建仓库"><br><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/1.jpg" alt="创建仓库"></p><h3 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h3><p>我们使用ssh key来解决本地和服务器的连接问题。</p><pre class=" language-bash"><code class="language-bash"> $ <span class="token function">cd</span> ~/. <span class="token function">ssh</span> <span class="token comment" spellcheck="true">#检查本机已存在的ssh密钥</span></code></pre><p><code>如果提示：</code>No such file or directory 说明你是第一次使用git。</p><pre class=" language-bash"><code class="language-bash">   $ ssh-keygen -t rsa -C <span class="token string">"邮件地址"</span> <span class="token comment" spellcheck="true">#新增id_rsa.pub文件</span></code></pre><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件。记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/2.jpg" alt="配置SSH key"></p><ul><li><p>测试是否成功配置SSH key</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">ssh</span> -T git@github.com <span class="token comment" spellcheck="true"># 邮箱地址不用改!</span></code></pre><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi <strong>***</strong>! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息说明SSH已配置成功！</p></li></ul><h3 id="配置全局github账户"><a href="#配置全局github账户" class="headerlink" title="配置全局github账户"></a>配置全局github账户</h3><pre class=" language-bash"><code class="language-bash">   $ <span class="token function">git</span> config --global user.name <span class="token string">"github用户名"</span>  <span class="token comment" spellcheck="true"># 填写你的github用户名</span>   $ <span class="token function">git</span> config --global user.email  <span class="token string">"xxx@qq.com"</span> <span class="token comment" spellcheck="true"># 填写你的github注册邮箱</span></code></pre><hr><h2 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。<br> <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">点我了解详情</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class=" language-bash"><code class="language-bash">   <span class="token function">npm</span> <span class="token function">install</span> -g hexo <span class="token comment" spellcheck="true"># 安装</span></code></pre><h3 id="创建本地文件"><a href="#创建本地文件" class="headerlink" title="创建本地文件"></a>创建本地文件</h3><p>在电脑的某一位置新建一个Blog文件夹，用来存放博客文件。比如，我在E:盘</p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/3.jpg" alt="新建Blog文件夹"></p><p>在当前文件夹下执行如下命令：</p><pre class=" language-bash"><code class="language-bash">   $ hexo init </code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/4.jpg" alt="Git Bash Here"><br><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/5.jpg" alt="依赖文件"></p><h3 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h3><p>执行以下命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><pre class=" language-bash"><code class="language-bash">   $ hexo g <span class="token comment" spellcheck="true"># 生成</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/6.jpg" alt="生成"></p><h3 id="开启本地预览服务"><a href="#开启本地预览服务" class="headerlink" title="开启本地预览服务"></a>开启本地预览服务</h3><p><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容</p><pre class=" language-bash"><code class="language-bash">   $ hexo s <span class="token comment" spellcheck="true"># 启动</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/7.jpg" alt="启动"></p><blockquote><p>端口占用问题解决：</p></blockquote><p> <img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/8.jpg" alt="端口占用问题"></p><p><strong>解决</strong>：<br>进入<code>cmd</code></p><ul><li><p>输入：</p><pre class=" language-bash"><code class="language-bash"> <span class="token operator">></span> <span class="token function">netstat</span> -ano <span class="token operator">|</span>findstr 4000 <span class="token comment" spellcheck="true">#查找4000端口号进程</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/9.jpg" alt="查找4000端口号进程"></p></li><li><p>输入：</p><pre class=" language-bash"><code class="language-bash"> <span class="token operator">></span> taskkill /pid <span class="token punctuation">[</span>进程码<span class="token punctuation">]</span> -t<span class="token punctuation">(</span>结束该进程<span class="token punctuation">)</span> -f<span class="token punctuation">(</span>强制结束该进程以及所有子进程<span class="token punctuation">)</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/10.jpg" alt="关闭占用进程号"></p></li></ul><hr><p>到此为止，就成功搭建了基于<code>Hexo+Github</code>的个人博客。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
