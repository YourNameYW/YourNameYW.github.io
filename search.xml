<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo+Github搭建个人博客</title>
      <link href="/2019/10/31/Hexo-Github/"/>
      <url>/2019/10/31/Hexo-Github/</url>
      
        <content type="html"><![CDATA[<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><p><code>注：</code> 在搭建个人博客前首先要了解以下内容：</p><ul><li><p>node.js</p></li><li><p>Markdown</p></li></ul><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>有一个github账号<br> <code>注：</code><a href="https://github.com/join/" target="_blank" rel="noopener">点我开始注册</a></p></li><li><p>安装了node.js、npm</p><ul><li><p>检查是否安装node，在<code>cmd</code>中输入：（安装成功会显示版本号）</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> node -v <span class="token comment" spellcheck="true">#检查是否安装node</span></code></pre><p>如果没有安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">点我开始安装</a></p></li><li><p>检查是否安装npm，在<code>cmd</code>中输入：（安装成功会显示版本号）</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> <span class="token function">npm</span> -v <span class="token comment" spellcheck="true">#检查是否安装npm</span></code></pre><blockquote><p><code>注：</code>如果是最新版的node.js安装后就不需要再安装npm的。由于新版的node.js已经集成了npm，所以之前npm也一并安装好了。</p></blockquote></li></ul></li><li><p>安装了git for windows（或者其它git客户端）</p><ul><li>检查是否安装git，在<code>cmd</code>中输入：（安装成功会显示版本号）<pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> <span class="token function">git</span> --version <span class="token comment" spellcheck="true">#检查是否安装git</span></code></pre>如果没有安装<a href="https://git-scm.com/" target="_blank" rel="noopener">点我开始安装</a></li></ul></li></ul><hr><h2 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（<strong>必须是你的用户名，其它名称无效</strong>），将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io</a></p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/0.jpg" alt="创建仓库"><br><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/1.jpg" alt="创建仓库"></p><h3 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h3><p>我们使用ssh key来解决本地和服务器的连接问题。</p><pre class=" language-bash"><code class="language-bash"> $ <span class="token function">cd</span> ~/. <span class="token function">ssh</span> <span class="token comment" spellcheck="true">#检查本机已存在的ssh密钥</span></code></pre><p><code>如果提示：</code>No such file or directory 说明你是第一次使用git。</p><pre class=" language-bash"><code class="language-bash">   $ ssh-keygen -t rsa -C <span class="token string">"邮件地址"</span> <span class="token comment" spellcheck="true">#新增id_rsa.pub文件</span></code></pre><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件。记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/2.jpg" alt="配置SSH key"></p><ul><li><p>测试是否成功配置SSH key</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">ssh</span> -T git@github.com <span class="token comment" spellcheck="true"># 邮箱地址不用改!</span></code></pre><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi <strong>***</strong>! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息说明SSH已配置成功！</p></li></ul><h3 id="配置全局github账户"><a href="#配置全局github账户" class="headerlink" title="配置全局github账户"></a>配置全局github账户</h3><pre class=" language-bash"><code class="language-bash">   $ <span class="token function">git</span> config --global user.name <span class="token string">"github用户名"</span>  <span class="token comment" spellcheck="true"># 填写你的github用户名</span>   $ <span class="token function">git</span> config --global user.email  <span class="token string">"xxx@qq.com"</span> <span class="token comment" spellcheck="true"># 填写你的github注册邮箱</span></code></pre><hr><h2 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。<br> <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">点我了解详情</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class=" language-bash"><code class="language-bash">   <span class="token function">npm</span> <span class="token function">install</span> -g hexo <span class="token comment" spellcheck="true"># 安装</span></code></pre><h3 id="创建本地文件"><a href="#创建本地文件" class="headerlink" title="创建本地文件"></a>创建本地文件</h3><p>在电脑的某一位置新建一个Blog文件夹，用来存放博客文件。比如，我在E:盘</p><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/3.jpg" alt="新建Blog文件夹"></p><p>在当前文件夹下执行如下命令：</p><pre class=" language-bash"><code class="language-bash">   $ hexo init </code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/4.jpg" alt="Git Bash Here"><br><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/5.jpg" alt="依赖文件"></p><h3 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h3><p>执行以下命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><pre class=" language-bash"><code class="language-bash">   $ hexo g <span class="token comment" spellcheck="true"># 生成</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/6.jpg" alt="生成"></p><h3 id="开启本地预览服务"><a href="#开启本地预览服务" class="headerlink" title="开启本地预览服务"></a>开启本地预览服务</h3><p><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容</p><pre class=" language-bash"><code class="language-bash">   $ hexo s <span class="token comment" spellcheck="true"># 启动</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/7.jpg" alt="启动"></p><blockquote><p>端口占用问题解决：</p></blockquote><p> <img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/8.jpg" alt="端口占用问题"></p><p><strong>解决</strong>：<br>进入<code>cmd</code></p><ul><li><p>输入：</p><pre class=" language-bash"><code class="language-bash"> <span class="token operator">></span> <span class="token function">netstat</span> -ano <span class="token operator">|</span>findstr 4000 <span class="token comment" spellcheck="true">#查找4000端口号进程</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/9.jpg" alt="查找4000端口号进程"></p></li><li><p>输入：</p><pre class=" language-bash"><code class="language-bash"> <span class="token operator">></span> taskkill /pid <span class="token punctuation">[</span>进程码<span class="token punctuation">]</span> -t<span class="token punctuation">(</span>结束该进程<span class="token punctuation">)</span> -f<span class="token punctuation">(</span>强制结束该进程以及所有子进程<span class="token punctuation">)</span></code></pre><p><img src="https://rainbows-1256918397.cos.ap-beijing.myqcloud.com/rainbowsImg/10.jpg" alt="关闭占用进程号"></p></li></ul><hr><p>到此为止，就成功搭建了基于<code>Hexo+Github</code>的个人博客。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery样式的使用</title>
      <link href="/2019/10/31/hexo-theme-matery/"/>
      <url>/2019/10/31/hexo-theme-matery/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> hexo-theme-matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/31/hello-world/"/>
      <url>/2019/10/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
